{"version":3,"file":"edu.min.js","sources":["../src/edu.js"],"sourcesContent":["// This file is part of edu-sharing created by metaVentis GmbH — http://metaventis.com\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @copyright  metaVentis GmbH — http://metaventis.com\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getSecuredNode} from \"./repository\";\nimport Config from 'core/config';\n\nexport const start = (repoUrl) => {\n    const allEduSharingObjects = document.querySelectorAll(\"div[data-type='esObject']\");\n\n    const options = {\n        root: null,\n        rootMargin: \"400px\",\n        threshold: 0\n    };\n\n    const observerCallback = async(entries, observer) => {\n        for (const entry of entries) {\n            await renderObject(entry.target);\n            observer.unobserve(entry.target);\n        }\n    };\n\n    /**\n     * @param {Element} element\n     */\n    const renderObject = async(element) => {\n        const wrapper = element.parentElement;\n        const nodeId = element.getAttribute('data-node');\n        const containerId = element.getAttribute('data-container');\n        const version = element.getAttribute('data-version');\n        const usage = element.getAttribute('data-usage');\n        const resourceId = element.getAttribute('data-resource');\n        const width = element.getAttribute('data-width');\n\n        const resourceUrl = `${Config.wwwroot}/filter/edusharing/inlineHelper.php?` +\n            `nodeId=${nodeId}&nodeVersion=${version}&usageId=${usage}&resourceId=${resourceId}&containerId=${containerId}`;\n\n        const ajaxParams = {\n            eduSecuredNodeStructure: {\n                nodeId: nodeId\n            }\n        };\n        const response = await getSecuredNode(ajaxParams).catch(error => {\n            window.console.error(error);\n        });\n\n        const testUser = {\n            authorityName: \"authorName\",\n            firstName: \"Horst\",\n            surName: \"Tester\",\n            userEMail: \"mail@mail.de\"\n        };\n        const serviceWorkerPhp = `${Config.wwwroot}/filter/edusharing/getServiceWorker.php`;\n        if ('serviceWorker' in navigator) {\n            await navigator.serviceWorker.register(serviceWorkerPhp, {\n                scope: '/'\n            });\n        }\n        const renderComponent = document.createElement('edu-sharing-render');\n        renderComponent.classList.add('edu-sharing-render');\n        renderComponent.style.width = width + 'px';\n        renderComponent.encoded_node = response.securedNode;\n        renderComponent.signature = response.signature;\n        renderComponent.jwt = response.jwt;\n        renderComponent.render_url = response.renderingBaseUrl;\n        renderComponent.encoded_user = btoa(JSON.stringify(testUser));\n        renderComponent.service_worker_url = serviceWorkerPhp;\n        renderComponent.activate_service_worker = false;\n        renderComponent.assets_url = repoUrl + '/web-components/rendering-service-amd/assets';\n        renderComponent.resource_url = resourceUrl;\n        wrapper.innerHTML = \"\";\n        wrapper.appendChild(renderComponent);\n        window.console.log(\"resurl: \" + resourceUrl);\n    };\n\n    const observer = new IntersectionObserver(observerCallback, options);\n    allEduSharingObjects.forEach(element => observer.observe(element));\n};\n"],"names":["repoUrl","allEduSharingObjects","document","querySelectorAll","renderObject","async","wrapper","element","parentElement","nodeId","getAttribute","containerId","version","usage","resourceId","width","resourceUrl","Config","wwwroot","ajaxParams","eduSecuredNodeStructure","response","catch","error","window","console","serviceWorkerPhp","navigator","serviceWorker","register","scope","renderComponent","createElement","classList","add","style","encoded_node","securedNode","signature","jwt","render_url","renderingBaseUrl","encoded_user","btoa","JSON","stringify","authorityName","firstName","surName","userEMail","service_worker_url","activate_service_worker","assets_url","resource_url","innerHTML","appendChild","log","observer","IntersectionObserver","entries","entry","target","unobserve","root","rootMargin","threshold","forEach","observe"],"mappings":";;;;0JAuBsBA,gBACZC,qBAAuBC,SAASC,iBAAiB,6BAkBjDC,aAAeC,MAAAA,gBACXC,QAAUC,QAAQC,cAClBC,OAASF,QAAQG,aAAa,aAC9BC,YAAcJ,QAAQG,aAAa,kBACnCE,QAAUL,QAAQG,aAAa,gBAC/BG,MAAQN,QAAQG,aAAa,cAC7BI,WAAaP,QAAQG,aAAa,iBAClCK,MAAQR,QAAQG,aAAa,cAE7BM,YAAc,UAAGC,gBAAOC,iEAChBT,+BAAsBG,4BAAmBC,6BAAoBC,mCAA0BH,aAE/FQ,WAAa,CACfC,wBAAyB,CACrBX,OAAQA,SAGVY,eAAiB,8BAAeF,YAAYG,OAAMC,QACpDC,OAAOC,QAAQF,MAAMA,UASnBG,2BAAsBT,gBAAOC,mDAC/B,kBAAmBS,iBACbA,UAAUC,cAAcC,SAASH,iBAAkB,CACrDI,MAAO,YAGTC,gBAAkB7B,SAAS8B,cAAc,sBAC/CD,gBAAgBE,UAAUC,IAAI,sBAC9BH,gBAAgBI,MAAMpB,MAAQA,MAAQ,KACtCgB,gBAAgBK,aAAef,SAASgB,YACxCN,gBAAgBO,UAAYjB,SAASiB,UACrCP,gBAAgBQ,IAAMlB,SAASkB,IAC/BR,gBAAgBS,WAAanB,SAASoB,iBACtCV,gBAAgBW,aAAeC,KAAKC,KAAKC,UAnBxB,CACbC,cAAe,aACfC,UAAW,QACXC,QAAS,SACTC,UAAW,kBAgBflB,gBAAgBmB,mBAAqBxB,iBACrCK,gBAAgBoB,yBAA0B,EAC1CpB,gBAAgBqB,WAAapD,QAAU,+CACvC+B,gBAAgBsB,aAAerC,YAC/BV,QAAQgD,UAAY,GACpBhD,QAAQiD,YAAYxB,iBACpBP,OAAOC,QAAQ+B,IAAI,WAAaxC,cAG9ByC,SAAW,IAAIC,sBA5DIrD,MAAMsD,QAASF,gBAC/B,MAAMG,SAASD,cACVvD,aAAawD,MAAMC,QACzBJ,SAASK,UAAUF,MAAMC,UATjB,CACZE,KAAM,KACNC,WAAY,QACZC,UAAW,IAgEfhE,qBAAqBiE,SAAQ3D,SAAWkD,SAASU,QAAQ5D"}